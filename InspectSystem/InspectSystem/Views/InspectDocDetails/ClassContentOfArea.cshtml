@model InspectSystem.Models.InspectDocDetailsViewModels

<script src="~/Scripts/ClassContentOfArea.js"></script>
@{
    ViewBag.Title = "ClassContentOfArea";
}

<h3>@ViewBag.ClassName</h3>
@using (Html.BeginForm("TempSave","InspectDocDetails", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    var currentItemName = "0";
    int i = 0;
    <div class="form-horizontal">
        @foreach (var item in Model.InspectItems)
        {
            <!--Display the ItemName when ItemName is not the same.-->
            if (item.ItemName != currentItemName)
            {
                @Html.DisplayFor(modelItem => item.ItemName);

                foreach(var fieldItem in Model.InspectFields)
                {
                    <!--Display all the FieldName belong the current Item-->
                    if (item.ItemID == fieldItem.ItemID)
                    {
                        @Html.DisplayFor(modelItem => fieldItem.FieldName);

                        foreach(var docItem in Model.InspectDocDetailsTemporary)
                        {
                            <!--Display textbox or checkbox for all fields. -->
                            if (docItem.ItemID == item.ItemID && docItem.FieldID == fieldItem.FieldID)
                            {
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].DocID", docItem.DocID)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].AreaID", docItem.AreaID)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].AreaName", docItem.AreaName)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].ClassID", docItem.ClassID)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].ClassName", docItem.ClassName)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].ItemID", docItem.ItemID)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].ItemName", docItem.ItemName)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].FieldID", docItem.FieldID)
                                @Html.Hidden("InspectDocDetailsTemporary[" + i + "].FieldName", docItem.FieldName)            

                                <!-- display case with field datatype. -->
                                switch (fieldItem.DataType)
                                {
                                    case "string" :
                                        @Html.Editor("InspectDocDetailsTemporary[" + i + "].Value", docItem.Value)  
                                        @Html.ValidationMessageFor(modelItem => docItem.Value)
                                        break;

                                    case "float" :
                                        @Html.Editor("InspectDocDetailsTemporary[" + i + "].Value", docItem.Value)    
                                        @Html.DisplayFor(modelItem => fieldItem.UnitOfData)
                                        @Html.ValidationMessageFor(modelItem => docItem.Value)
                                        break;

                                    case "boolean" :
                                        @Html.CheckBox("InspectDocDetailsTemporary[" + i + "].IsFunctional", docItem.IsFunctional)
                                        @Html.ValidationMessageFor(modelItem => docItem.IsFunctional)

                                        @Html.LabelFor(modelItem => docItem.ErrorDescription)
                                        @Html.Editor("InspectDocDetailsTemporary[" + i + "].ErrorDescription", docItem.ErrorDescription)
                                        @Html.ValidationMessageFor(modelItem => docItem.ErrorDescription);
                                        <hr />
                                        break;
                                }
                            }
                        }
                        i++;
                    }
                }
                <br />
            }
            else
            {
                currentItemName = item.ItemName;
            }
        }
    </div>
    <div>
        <input type="submit" value="暫時儲存" />
    </div>
}



