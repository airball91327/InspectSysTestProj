@model InspectSystem.Models.InspectDocDetailsViewModels

<script src="~/Scripts/ClassContentOfAreaDocEdit.js"></script>

@{
    ViewBag.Title = "ViewOfMedicalGas";
}

<style>
    .inputTextOfValue {
        width: 45%;
    }

    .inputTextOfError {
        width: 70%;
    }

    #sendToChecker {
        position: absolute;
        right: 12px;
    }
</style>

<h3 style="font-weight: bold; padding-left: 10px">@ViewBag.ClassName</h3>
<hr />

@using (Html.BeginForm("SaveData", "InspectDocEdit", FormMethod.Post, new { id = "detailsForm" }))
{
    @Html.AntiForgeryToken()

    var currentItemName = "0";
    int i = 0;
    <div class="container col-md-12">
        @foreach (var item in Model.InspectItems)
        {
            /* Display the ItemName when ItemName is not the same. */
            if (item.ItemName != currentItemName)
            {
                int row = 1;
                <div class="row col-md-12" style="font-weight: bold">
                    @Html.DisplayFor(modelItem => item.ItemName)
                </div>
                foreach (var fieldItem in Model.InspectFields)
                {
                    /* Display all the FieldName belong the current Item. */
                    if (item.ItemID == fieldItem.ItemID)
                    {

                        var singleRow = "single-row" + row;
                        <div class="row col-md-12 @singleRow">
                            @if (row % 2 == 1)
                            {
                                <script>
                                    $("." + "@singleRow").attr("style", "background-color: AliceBlue");
                                </script>
                            }
                            else
                            {
                                <script>
                                    $("." + "@singleRow").attr("style", "background-color: white");
                                </script>
                            }
                            <div class="col-md-3">
                                @Html.DisplayFor(modelItem => fieldItem.FieldName)
                            </div>

                            @foreach (var docItem in Model.InspectDocDetails)
                            {
                                /* Display textbox or checkbox for all fields. */
                                if (docItem.ItemID == item.ItemID && docItem.FieldID == fieldItem.FieldID)
                                {
                                    @Html.Hidden("InspectDocDetails[" + i + "].DocID", docItem.DocID)
                                    @Html.Hidden("InspectDocDetails[" + i + "].AreaID", docItem.AreaID, new { id = "InspectDocDetails[" + i + "].AreaID" })
                                    @Html.Hidden("InspectDocDetails[" + i + "].AreaName", docItem.AreaName)
                                    @Html.Hidden("InspectDocDetails[" + i + "].ClassID", docItem.ClassID, new { id = "InspectDocDetails[" + i + "].ClassID" })
                                    @Html.Hidden("InspectDocDetails[" + i + "].ClassName", docItem.ClassName)
                                    @Html.Hidden("InspectDocDetails[" + i + "].ItemID", docItem.ItemID, new { id = "InspectDocDetails[" + i + "].ItemID" })
                                    @Html.Hidden("InspectDocDetails[" + i + "].ItemName", docItem.ItemName)
                                    @Html.Hidden("InspectDocDetails[" + i + "].FieldID", docItem.FieldID, new { id = "InspectDocDetails[" + i + "].FieldID" })
                                    @Html.Hidden("InspectDocDetails[" + i + "].FieldName", docItem.FieldName)

                                    switch (fieldItem.DataType)
                                    {
                                        case "string":
                                            <div class="col-md-5">
                                                @Html.EditorFor(modelItem => docItem.Value, new { htmlAttributes = new { @Name = "InspectDocDetails[" + i + "].Value", @class = "inputTextOfValue" } })
                                                @Html.DisplayFor(modelItem => fieldItem.UnitOfData)
                                                @Html.ValidationMessage("InspectDocDetails[" + i + "].Value", "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-3">
                                                @Html.RadioButtonFor(modelItem => docItem.IsFunctional, true, new { @Name = "InspectDocDetails[" + i + "].IsFunctional" })正常
                                                @Html.RadioButtonFor(modelItem => docItem.IsFunctional, false, new { @Name = "InspectDocDetails[" + i + "].IsFunctional" })不正常
                                                <br />
                                                @Html.LabelFor(modelItem => docItem.ErrorDescription)
                                                @Html.TextAreaFor(modelItem => docItem.ErrorDescription, new { @Name = "InspectDocDetails[" + i + "].ErrorDescription", rows = "3" })
                                            </div>
                                            break;

                                        case "float":
                                            <div class="col-md-5">
                                                @Html.EditorFor(modelItem => docItem.Value, new { htmlAttributes = new { @Name = "InspectDocDetails[" + i + "].Value", @class = "inputTextOfValue inputValue", id = i } })
                                                @Html.DisplayFor(modelItem => fieldItem.UnitOfData)
                                                @Html.ValidationMessage("InspectDocDetails[" + i + "].Value", "", new { @class = "text-danger" })
                                                <br /><span class="@i"></span>
                                            </div>
                                            <div class="col-md-3">
                                                @Html.RadioButtonFor(modelItem => docItem.IsFunctional, true, new { @Name = "InspectDocDetails[" + i + "].IsFunctional" })正常
                                                @Html.RadioButtonFor(modelItem => docItem.IsFunctional, false, new { @Name = "InspectDocDetails[" + i + "].IsFunctional" })不正常
                                                <br />
                                                @Html.LabelFor(modelItem => docItem.ErrorDescription)
                                                @Html.TextAreaFor(modelItem => docItem.ErrorDescription, new { @Name = "InspectDocDetails[" + i + "].ErrorDescription", rows = "3" })
                                            </div>
                                            break;

                                        case "boolean":
                                            <div class="col-md-5"></div>
                                            <div class="col-md-3">
                                                @Html.RadioButtonFor(modelItem => docItem.IsFunctional, true, new { @Name = "InspectDocDetails[" + i + "].IsFunctional" })正常
                                                @Html.RadioButtonFor(modelItem => docItem.IsFunctional, false, new { @Name = "InspectDocDetails[" + i + "].IsFunctional" })不正常
                                                <br />
                                                @Html.LabelFor(modelItem => docItem.ErrorDescription)
                                                @Html.TextAreaFor(modelItem => docItem.ErrorDescription, new { @Name = "InspectDocDetails[" + i + "].ErrorDescription", rows = "3" })
                                            </div>
                                            break;

                                        case "checkbox":
                                            <div class="col">
                                                @if (docItem.Value == "true")
                                                {
                                                    @Html.CheckBox("InspectDocDetails[" + i + "].Value", true)
                                                }
                                                else
                                                {
                                                    @Html.CheckBox("InspectDocDetails[" + i + "].Value", false)
                                                }
                                            </div>
                                            break;
                                    }
                                }
                            }
                            @{
                                i++;
                                row++;
                            }
                        </div>
                    }
                }
                <hr />
            }
            else
            {
                currentItemName = item.ItemName;
            }
        }
        <div>
            <input class="btn btn-primary" type="submit" value="儲存修改資料" />
            <button type="button" class="btn btn-success" id="sendToChecker">送出審核</button>
        </div>
        <hr />
    </div>
}

