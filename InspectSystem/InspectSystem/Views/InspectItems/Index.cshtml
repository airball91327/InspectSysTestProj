@model IEnumerable<InspectSystem.Models.InspectItems>


@Scripts.Render("~/bundles//jquery")

@{

    ViewBag.Title = "巡檢項目維護";

    var SearchResult = TempData["SearchResult"] as List<InspectSystem.Models.InspectItems>;
    TempData.Keep();
}

<script>
    $(document).ready(function () {

        /* When a edit button click */
        $(".editBtn").click(function () {
            /* hide edit button */
            $(this).hide();
            /* When Editing, disable other edit buttons */
            $(".editBtn").attr("disabled", true);
            /* Change the selected row to be edit */
            $(".displayRow" + $(this).attr("id")).hide();
            $(".editRow" + + $(this).attr("id")).show();
        });

        /* Get the areaName and className that user selected. */
        var areaName = $("#areaName").text();
        var className = $("#className").text();

        /* To create a table row for user to new a item. */
        function createItemForm() {

            /* Create table row and data elements */ 
            var newRow = document.createElement("TR");
            var newCell1 = document.createElement("TD");
            newCell1.setAttribute("class", "col-md-2");
            var newCell2 = document.createElement("TD");
            newCell2.setAttribute("class", "col-md-2");
            var newCell3 = document.createElement("TD");
            newCell3.setAttribute("class", "col-md-2");
            var newCell4 = document.createElement("TD");
            newCell4.setAttribute("class", "col-md-2");
            var newCell5 = document.createElement("TD");
            newCell5.setAttribute("class", "col-md-2");
            var newCell6 = document.createElement("TD");
            newCell6.setAttribute("class", "col-md-2");

            var aName = document.createTextNode(areaName);
            var cName = document.createTextNode(className);

            /* input element, hidden areaID */
            var inputAreaID = document.createElement("input");     
            inputAreaID.setAttribute("type", "hidden");
            inputAreaID.setAttribute("name", "areaID");
            inputAreaID.setAttribute("value", "@TempData["AreaListValue"]");

            /* input element, hidden classID */
            var inputClassID = document.createElement("input");    
            inputClassID.setAttribute("type", "hidden");
            inputClassID.setAttribute("name", "classID");
            inputClassID.setAttribute("value", "@TempData["ClassListValue"]");

            /* input element, itemID */
            var inputitemID = document.createElement("input");     
            inputitemID.setAttribute("type", "text");
            inputitemID.setAttribute("name", "itemID");
            inputitemID.setAttribute("class", "form-control");

            /* input element, itemName */
            var inputitemName = document.createElement("input");   
            inputitemName.setAttribute("type", "text");
            inputitemName.setAttribute("name", "itemName");
            inputitemName.setAttribute("class", "form-control");

            /* input element, itemStatus */
            var inputitemStatus = document.createElement("input"); 
            inputitemStatus.setAttribute("type", "checkbox");
            inputitemStatus.setAttribute("name", "itemStatus");
            inputitemStatus.setAttribute("id", "itemStatusCheck");
            inputitemStatus.setAttribute("data-val", "true");
            inputitemStatus.setAttribute("value", "true");
            inputitemStatus.setAttribute("checked", "true");  //set default value to true

            /* input element, submit button */
            var submitBtn = document.createElement("input");       
            submitBtn.setAttribute("type", "submit");
            submitBtn.setAttribute("value", "儲存");
            submitBtn.setAttribute("class", "btn btn-primary");

            /* hyperlink element, Back to Index button */
            var backBtn = document.createElement("a");             
            backBtn.setAttribute("class", "btn");
            backBtn.setAttribute("href", "@Url.Action("Index")");
            var btnText = document.createTextNode("返回");
            backBtn.appendChild(btnText);

            /* Insert elements to cells */
            newCell1.appendChild(inputAreaID);
            newCell1.appendChild(aName);
            newCell2.appendChild(inputClassID);
            newCell2.appendChild(cName);
            newCell3.appendChild(inputitemID);
            newCell4.appendChild(inputitemName);
            newCell5.appendChild(inputitemStatus);
            newCell6.appendChild(submitBtn);
            newCell6.appendChild(backBtn);

            /* Insert cells to the new row */
            newRow.appendChild(newCell1);
            newRow.appendChild(newCell2);
            newRow.appendChild(newCell3);
            newRow.appendChild(newCell4);
            newRow.appendChild(newCell5);
            newRow.appendChild(newCell6);

            document.getElementById("createTable").appendChild(newRow);
        }

        if (@TempData["AreaListValue"] != null && @TempData["ClassListValue"] != null) {
            $("#createBtn").attr("disabled", false);
        }
        /* Create a new row for insert item's detail */
        $("#createBtn").click(function () {

            createItemForm();
            /* When Creating new item, disable other edit buttons */
            $(".editBtn").attr("disabled", true);
        });

    });
</script>

<style>
    /* The items that can be edit (Hidden by Default) */
    .hideEditItems {
        display: none;
    }
</style>

<h2>巡檢項目維護</h2>

<!--使用者選擇區域與類別進行搜尋-->
<hr />
@using (Html.BeginForm("SearchItems", "InspectItems", FormMethod.Post, new { @class = "form-inline" }))
{
    <div class="container">
        <div class="form-group col-md-5">
            @Html.Label("選擇區域:", new { @for = "AreaList" })
            @Html.DropDownList("AreaList", null, "請選擇",
                                new { @class = "form-control", name = "AreaList", required = "required" })
        </div>
        <div class="form-group col-md-5">
            @Html.Label("選擇類別:", new { @for = "ClassList" })
            @Html.DropDownList("ClassList", null, "請選擇",
                                new { @class = "form-control", name = "ClassList", required = "required" })
        </div>
        <div class="form-group col-md-2">
            <input type="submit" value="查詢項目" class="btn" />
        </div>
    </div>
}

<hr />
<div class="container">
    <button class="btn btn-primary" id="createBtn" disabled>新增項目</button>
</div><br />


<table class="table" id="editTable">
    <tr>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.InspectAreas.AreaName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.InspectClasses.ClassName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.ItemID)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.ItemName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.ItemStatus)
        </th>
        <th class="col-md-2"></th>
    </tr>

    @if (SearchResult == null)
    {

    }
    else
    {
        int row = 1;
        foreach (var item in SearchResult)
        {
            string displayRow = "displayRow" + row;
            string editRow = "editRow" + row;
            <tr>
                @using (Html.BeginForm("Edit", "InspectItems", FormMethod.Post))
                {
                    @Html.HiddenFor(modelItem => item.ID)
                    <td class="col-md-2">
                        <span id="areaName">@Html.DisplayFor(modelItem => item.InspectAreas.AreaName)</span>
                    </td>
                    <td class="col-md-2">
                        <span id="className">@Html.DisplayFor(modelItem => item.InspectClasses.ClassName)</span>
                    </td>
                    <td class="col-md-2">
                        @Html.DisplayFor(modelItem => item.ItemID)
                        @Html.HiddenFor(modelItem => item.ItemID)
                    </td>
                    <td class="col-md-2">
                        <span class="@displayRow">@Html.DisplayFor(modelItem => item.ItemName)</span>
                        <span class="@editRow hideEditItems">@Html.EditorFor(modelItem => item.ItemName, new { htmlAttributes = new { @class = "form-control" } })</span>
                        @Html.ValidationMessageFor(modelItem => item.ItemName, "", new { @class = "text-danger" })
                    </td>
                    <td class="col-md-2">
                        <span class="@displayRow">@Html.DisplayFor(modelItem => item.ItemStatus)</span>
                        <span class="@editRow hideEditItems">@Html.CheckBoxFor(modelItem => item.ItemStatus)</span>
                    </td>
                    <td class="col-md-2">
                        <input type="button" class="btn editBtn" value="編輯" id="@row" />
                        <input type="submit" class="@editRow hideEditItems btn btn-primary" value="儲存" />
                    </td>
                }
            </tr>
            row++;
        }
    }
</table>

@using (Html.BeginForm("Create", "InspectItems", FormMethod.Post))
{
    <table class="table" id="createTable"></table>
}


    <hr />
<p style="text-align:center">-----------------------以下測試---------------------------</p>
<!--接收值測試-->
<div>
    TempData["AreaListValue"] = @TempData["AreaListValue"] <br />
    TempData["ClassListValue"] = @TempData["ClassListValue"] <br />

</div>
<hr />
<div>測試對照資料表</div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AreaID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InspectAreas.AreaName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClassID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InspectClasses.ClassName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemStatus)
        </th>
        <th></th>
    </tr>

    @if (SearchResult == null)
    {

    }
    else
    {
        foreach (var item in SearchResult)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AreaID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InspectAreas.AreaName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClassID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InspectClasses.ClassName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemStatus)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID, Itemid = item.ItemID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID, Itemid = item.ItemID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID, Itemid = item.ItemID })
                </td>
            </tr>
        }
    }

</table>